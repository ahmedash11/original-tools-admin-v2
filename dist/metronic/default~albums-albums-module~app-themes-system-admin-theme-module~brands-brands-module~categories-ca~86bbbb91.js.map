{"version":3,"sources":["webpack:///./src/app/shared/_services/crud.service.ts","webpack:///./src/app/shared/dashboard/dashboard.component.html","webpack:///./src/app/shared/dashboard/dashboard.component.scss","webpack:///./src/app/shared/dashboard/dashboard.component.ts","webpack:///./src/app/shared/generic-form-modal/generic-form-modal.component.html","webpack:///./src/app/shared/generic-form-modal/generic-form-modal.component.scss","webpack:///./src/app/shared/generic-form-modal/generic-form-modal.component.ts","webpack:///./src/app/shared/generic-form/generic-form.component.html","webpack:///./src/app/shared/generic-form/generic-form.component.scss","webpack:///./src/app/shared/generic-form/generic-form.component.ts","webpack:///./src/app/shared/generic-list/generic-list.component.html","webpack:///./src/app/shared/generic-list/generic-list.component.scss","webpack:///./src/app/shared/generic-list/generic-list.component.ts","webpack:///./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"default~albums-albums-module~app-themes-system-admin-theme-module~brands-brands-module~categories-ca~86bbbb91.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CRUDService {\n  public url: string = '/api/';\n  public genericListFlagSubject = new BehaviorSubject(false);\n  public forceRefreshValue = this.genericListFlagSubject.asObservable();\n\n  constructor(private http: HttpClient) {}\n  forwardForceRefresh(flag: boolean) {\n    this.genericListFlagSubject.next(flag);\n  }\n\n  getData(gate, query): Promise<any> {\n    let params = new HttpParams();\n    let requestUrl = this.url + gate;\n    query = {\n      filter: JSON.stringify(query)\n    };\n    for (let index in query) {\n      params = params.set(index, query[index]);\n    }\n    return this.http.get(requestUrl, { params: params }).toPromise();\n  }\n\n  getCount(gate, query): Promise<any> {\n    let params = new HttpParams();\n    let requestUrl = this.url + gate + '/count';\n    delete query.skip;\n    delete query.limit;\n\n    for (let index in query) {\n      params = params.set(index, JSON.stringify(query[index]));\n    }\n    return this.http.get(requestUrl, { params: params }).toPromise();\n  }\n\n  getOne(gate, ID, query = {}): Promise<any> {\n    let params = new HttpParams();\n    let requestUrl = this.url + gate;\n    query = {\n      filter: JSON.stringify(query)\n    };\n    for (let index in query) {\n      params = params.set(index, query[index]);\n    }\n    return this.http\n      .get(`${requestUrl}/${ID}`, { params: params })\n      .toPromise();\n  }\n\n  deleteData(gate, query): Promise<any> {\n    let params = new HttpParams();\n    let requestUrl = this.url + gate;\n    query = {\n      where: JSON.stringify(query)\n    };\n    for (let index in query) {\n      params = params.set(index, query[index]);\n    }\n    return this.http\n      .delete(`${requestUrl}`, { params: params })\n      .toPromise();\n  }\n\n  addData(gate, data, query = {}): Promise<any> {\n    let params = new HttpParams();\n    let requestUrl = this.url + gate;\n    for (let index in query) {\n      params = params.set(index, query[index]);\n    }\n    return this.http\n      .post(requestUrl, data, { params: params })\n      .toPromise();\n  }\n\n  editData(gate, data, dataid): Promise<any> {\n    let requestUrl = this.url + gate;\n    return this.http\n      .patch(`${requestUrl}/${dataid}`, data)\n      .toPromise();\n  }\n\n  api(uri, body = {}, method = 'GET', query = {}) {\n    let requestPromise;\n    switch (method) {\n      case 'POST':\n        requestPromise = this.http.post(uri, body, {\n          params: query\n        });\n        break;\n\n      case 'GET':\n        requestPromise = this.http.get(uri, { params: { ...body } });\n        break;\n\n      case 'PATCH':\n        requestPromise = this.http.patch(uri, body, {\n          params: query\n        });\n        break;\n\n      case 'PUT':\n        requestPromise = this.http.put(uri, body, {\n          params: query\n        });\n        break;\n\n      case 'DELETE':\n        requestPromise = this.http.delete(uri, {\n          params: {\n            ...body\n          }\n        });\n        break;\n\n      default:\n        requestPromise = this.http.get(uri, {\n          params: { ...body }\n        });\n        break;\n    }\n    return requestPromise.toPromise();\n  }\n\n  public uploadAttachment(file: any, key = 'files') {\n    const input = new FormData();\n    input.append(key, file, file.name);\n\n    return this.http\n      .post(`/api//attachments/upload`, input, {\n        headers: {}\n      })\n      .toPromise();\n  }\n}\n","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"statsMap\\\">\\n  <div class=\\\"col-md-3 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Completed Orders'\\\"\\n      [icon]=\\\"'fa-check'\\\"\\n      [value]=\\\"statsMap.completed_orders\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-3 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Active Orders'\\\"\\n      [icon]=\\\"'fa-spinner'\\\"\\n      [value]=\\\"statsMap.active_orders\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-3 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Total Customers'\\\"\\n      [icon]=\\\"'fa-user-friends'\\\"\\n      [value]=\\\"statsMap.total_customers\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-3 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Total Chemists'\\\"\\n      [icon]=\\\"'fa-motorcycle'\\\"\\n      [value]=\\\"statsMap.total_chemists\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-6 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Available Chemists'\\\"\\n      [icon]=\\\"'fa-signal'\\\"\\n      [value]=\\\"statsMap.active_chemists\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-6 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Samples Collected'\\\"\\n      [icon]=\\\"'fa-vials'\\\"\\n      [value]=\\\"statsMap.total_samples\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-3 col-xs-3\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Rejected Samples'\\\"\\n      [icon]=\\\"'fa-times'\\\"\\n      [value]=\\\"statsMap.rejected_samples\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-3 col-xs-3\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Cancelled Orders'\\\"\\n      [icon]=\\\"'fa-times'\\\"\\n      [value]=\\\"statsMap.cancelled_orders\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-6 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Results Exported'\\\"\\n      [icon]=\\\"'fas fa-file-export'\\\"\\n      [value]=\\\"statsMap.total_results\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-6 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Total Tests'\\\"\\n      [icon]=\\\"'fa-file-alt'\\\"\\n      [value]=\\\"statsMap.total_tests\\\"\\n    ></kt-simple-box>\\n  </div>\\n\\n  <div class=\\\"col-md-6 col-xs-6\\\">\\n    <kt-simple-box\\n      [label]=\\\"'Total Labs'\\\"\\n      [icon]=\\\"'fas fa-flask'\\\"\\n      [value]=\\\"statsMap.total_labs\\\"\\n    ></kt-simple-box>\\n  </div>\\n</div>\\n<kt-widget1 [data]=\\\"profitsData\\\"></kt-widget1>\\n\\n<!-- TOP Labs Section -->\\n<div class=\\\"row\\\" *ngIf=\\\"statsMap\\\">\\n  <kt-portlet style=\\\"width: 100%;\\\">\\n    <kt-portlet-header [title]=\\\"'Top Labs'\\\"> </kt-portlet-header>\\n    <kt-portlet-body>\\n      <div\\n        class=\\\"lab-row d-flex align-items-center\\\"\\n        *ngFor=\\\"let labObj of statsMap.top_labs\\\"\\n      >\\n        <div class=\\\"img kt-padding-15\\\" style=\\\"width: 120px;\\\">\\n          <img\\n            style=\\\"width: 60px; height: 60px; object-fit: cover;\\\"\\n            src=\\\"{{\\n              labObj.logo ||\\n                'https://i.stack.imgur.com/agMKZ.png?s=32&g=1'\\n            }}\\\"\\n            alt=\\\"lab_img\\\"\\n          />\\n        </div>\\n        <div style=\\\"flex-grow: 1;\\\">\\n          <h4\\n            class=\\\"d-flex justify-content-between align-items-center\\\"\\n          >\\n            <span>\\n              {{ labObj.name }}\\n              <span>\\n                <i\\n                  *ngIf=\\\"labObj.verified\\\"\\n                  class=\\\"fas fa-check-circle\\\"\\n                  style=\\\"font-size: 12px; color: green;\\\"\\n                ></i>\\n              </span>\\n            </span>\\n            <span style=\\\"font-size: 12px; color: #ccc;\\\"\\n              >{{ labObj.total_orders }} order(s)</span\\n            >\\n          </h4>\\n          <div class=\\\"text-body\\\">\\n            {{ labObj.overview }}\\n          </div>\\n        </div>\\n      </div>\\n    </kt-portlet-body>\\n  </kt-portlet>\\n</div>\\n\\n<!-- TOP ordered Tests -->\\n<div class=\\\"row\\\" *ngIf=\\\"statsMap\\\">\\n  <kt-portlet style=\\\"width: 100%;\\\">\\n    <kt-portlet-header [title]=\\\"'Top Tests'\\\"> </kt-portlet-header>\\n    <kt-portlet-body>\\n      <div\\n        class=\\\"lab-row d-flex align-items-center\\\"\\n        *ngFor=\\\"let testObj of statsMap.top_tests\\\"\\n      >\\n        <div style=\\\"flex-grow: 1;\\\">\\n          <h4\\n            class=\\\"d-flex justify-content-between align-items-center\\\"\\n          >\\n            {{ testObj.name }}\\n\\n            <span style=\\\"font-size: 12px; color: #ccc;\\\"\\n              >{{ testObj.total_orders }} order(s)</span\\n            >\\n          </h4>\\n          <div class=\\\"text-body\\\">\\n            {{ testObj.overview }}\\n          </div>\\n        </div>\\n      </div>\\n    </kt-portlet-body>\\n  </kt-portlet>\\n</div>\\n\\n<!-- TOP Areas -->\\n<div class=\\\"row\\\" *ngIf=\\\"statsMap\\\">\\n  <kt-portlet style=\\\"width: 100%;\\\">\\n    <kt-portlet-header [title]=\\\"'Top Areas'\\\"> </kt-portlet-header>\\n    <kt-portlet-body>\\n      <div\\n        class=\\\"lab-row d-flex align-items-center\\\"\\n        *ngFor=\\\"let areaObj of statsMap.top_areas\\\"\\n      >\\n        <div style=\\\"flex-grow: 1;\\\">\\n          <h4\\n            class=\\\"d-flex justify-content-between align-items-center\\\"\\n          >\\n            {{ areaObj.name }}\\n\\n            <span style=\\\"font-size: 12px; color: #ccc;\\\"\\n              >{{ areaObj.total_orders }} order(s)</span\\n            >\\n          </h4>\\n        </div>\\n      </div>\\n    </kt-portlet-body>\\n  </kt-portlet>\\n</div>\\n\"","module.exports = \".kt-portlet--height-fluid-half {\\n  height: calc(100% - 20px); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9haG1lZGhpc2hhbS9EZXNrdG9wL1dvcmsvZXRvb2xzX2FkbWluL3NyYy9hcHAvc2hhcmVkL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBeUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmt0LXBvcnRsZXQtLWhlaWdodC1mbHVpZC1oYWxmIHtcclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gMjBweCk7XHJcbn0iXX0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { CRUDService } from '../_services/crud.service';\nimport { LayoutUtilsService } from '../../core/_base/crud';\n\n@Component({\n  selector: 'kt-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  public statsMap;\n  public profitsData;\n  constructor(\n    private _crudService: CRUDService,\n    private layoutService: LayoutUtilsService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    this._crudService\n      .api('/api/app/statistics', {}, 'GET')\n      .then((res) => {\n        this.statsMap = res;\n        console.log(\n          'DashboardComponent -> fetchStats -> this.statsMap',\n          this.statsMap\n        );\n        this.cd.detectChanges();\n        this.profitsData = [\n          {\n            title: 'Total Orders',\n            desc: 'Total Order requested from Patient APP',\n            value: this.statsMap.total_orders + ' Order',\n            valueClass: 'kt-font-brand'\n          },\n          {\n            title: 'Total Income',\n            desc: 'Total Order prices (not including tax)',\n            value: this.statsMap.total_price + ' EGP',\n            valueClass: 'kt-font-success'\n          },\n          {\n            title: 'Complaint Reports',\n            desc: 'Reports issued by customers',\n            value: this.statsMap.total_reports + ' Report',\n            valueClass: 'kt-font-danger'\n          }\n        ];\n      })\n      .catch((err) => {\n        this.layoutService.showActionNotification(\n          'Failed to fetch statistics'\n        );\n      });\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">{{ title }}</h4>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"close\\\"\\n    aria-label=\\\"Close\\\"\\n    (click)=\\\"activeModal.dismiss('Cross click')\\\"\\n  >\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <kt-generic-form\\n    *ngIf=\\\"modelData\\\"\\n    [title]=\\\"title\\\"\\n    [modelData]=\\\"modelData\\\"\\n    [instanceData]=\\\"instanceData\\\"\\n    (notifyParentCancel)=\\\"_onCancel()\\\"\\n    (notifyParentSuccess)=\\\"_onSubmitSuccess($event)\\\"\\n    [modalFlag]=\\\"true\\\"\\n    [gate]=\\\"gate\\\"\\n    [query]=\\\"query\\\"\\n  >\\n  </kt-generic-form>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9nZW5lcmljLWZvcm0tbW9kYWwvZ2VuZXJpYy1mb3JtLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\"","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'kt-form-modal',\n  templateUrl: './generic-form-modal.component.html',\n  styleUrls: ['./generic-form-modal.component.scss']\n})\nexport class GenericFormModalComponent implements OnInit {\n  @Input() title: string;\n  @Input() modelData: any;\n  @Input() instanceData: any;\n  @Input() gate: string;\n  @Input() query: any;\n  @Input() wizard = false;\n\n  @Output() notifyParentSuccess = new EventEmitter<any>();\n\n  public formData: any[];\n  public formGroup: FormGroup;\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit() {\n    console.log(this.modelData);\n  }\n\n  _onSubmitSuccess(data) {\n    console.log(data);\n    this.activeModal.close(data);\n    this.notifyParentSuccess.emit(data);\n  }\n\n  _onSubmitFail() {}\n\n  _onCancel(emittedCancel) {\n    this.activeModal.close('cancel');\n  }\n}\n","module.exports = \"<div\\n  class=\\\"actual-form\\\"\\n  [ngClass]=\\\"{ 'modal-form': modalFlag }\\\"\\n  *ngIf=\\\"formGroup\\\"\\n>\\n  <kt-portlet>\\n    <div *ngIf=\\\"wizardFlag\\\" class=\\\"form-wizard\\\">\\n      <div class=\\\"form-body kt-wizard-v1\\\" style=\\\"padding: 10px;\\\">\\n        <div class=\\\"kt-wizard-v1__nav\\\">\\n          <div class=\\\"kt-wizard-v1__nav-items\\\">\\n            <a\\n              *ngFor=\\\"let item of formGroups; let i = index\\\"\\n              class=\\\"kt-wizard-v1__nav-item\\\"\\n              data-ktwizard-type=\\\"step\\\"\\n              [ngClass]=\\\"{ completed: activeStep >= i + 1 }\\\"\\n            >\\n              <div class=\\\"kt-wizard-v1__nav-body\\\">\\n                <div class=\\\"kt-wizard-v1__nav-icon\\\">\\n                  <i [ngClass]=\\\"item.icon\\\"></i>\\n                </div>\\n                <div class=\\\"kt-wizard-v1__nav-label\\\">\\n                  {{ i + 1 }}) {{ item.title }}\\n                </div>\\n              </div>\\n            </a>\\n          </div>\\n        </div>\\n        <div\\n          id=\\\"bar\\\"\\n          class=\\\"progress progress-striped\\\"\\n          role=\\\"progressbar\\\"\\n        >\\n          <div\\n            class=\\\"progress-bar progress-bar-success\\\"\\n            [ngStyle]=\\\"{\\n              width: (activeStep / totalSteps) * 100 + '%'\\n            }\\\"\\n          ></div>\\n        </div>\\n      </div>\\n    </div>\\n    <kt-portlet-body>\\n      <form\\n        *ngIf=\\\"formGroup\\\"\\n        [formGroup]=\\\"formGroup\\\"\\n        class=\\\"kt-form kt-form--group-seperator-dashed\\\"\\n        (ngSubmit)=\\\"submit()\\\"\\n      >\\n        <!-- FIXME: handle forms array (multiple sections within a form) -->\\n        <div class=\\\"kt-form__section kt-form__section--first\\\">\\n          <div\\n            class=\\\"form-group kt-form__group row\\\"\\n            *ngFor=\\\"let formSection of formGroups; let i = index\\\"\\n            [hidden]=\\\"activeStep != i + 1 && wizardFlag\\\"\\n          >\\n            <div\\n              *ngIf=\\\"formSection.title && !wizardFlag\\\"\\n              style=\\\"padding-bottom: 20px;\\\"\\n              class=\\\"col-xs-12 col-lg-12 col-12\\\"\\n            >\\n              {{ formSection.title }}\\n            </div>\\n            <div\\n              *ngFor=\\\"let input of formSection.inputs\\\"\\n              [ngStyle]=\\\"{ display: input.hidden ? 'none' : 'block' }\\\"\\n              class=\\\"kt-margin-bottom-20-mobile\\\"\\n              [ngClass]=\\\"{\\n                'col-lg-12': input.type == 'textarea',\\n                'col-lg-6': input.type != 'textarea'\\n              }\\\"\\n            >\\n              <!--Add Asterisk to required fields-->\\n              <mat-form-field\\n                class=\\\"mat-form-field-fluid\\\"\\n                *ngIf=\\\"\\n                  input.type != 'boolean' && input.type != 'file'\\n                \\\"\\n                [ngSwitch]=\\\"input.type\\\"\\n                appearance=\\\"outline\\\"\\n              >\\n                <mat-label>\\n                  {{ input.name | titlecase }}\\n                </mat-label>\\n                <div *ngSwitchCase=\\\"'select'\\\">\\n                  <mat-select\\n                    *ngIf=\\\"input.simpleOpts\\\"\\n                    formControlName=\\\"{{ input.gate }}\\\"\\n                    [required]=\\\"input.required\\\"\\n                  >\\n                    <mat-option\\n                      *ngFor=\\\"let option of input.options\\\"\\n                      [value]=\\\"option\\\"\\n                    >\\n                      <!-- this span is specific for Color tub eselect case -->\\n                      <label\\n                        *ngIf=\\\"input.colorOptionStyle\\\"\\n                        [ngStyle]=\\\"{\\n                          backgroundColor: option,\\n                          color: option,\\n                          'margin-right': '20px',\\n                          margin: 'auto',\\n                          height: '10px',\\n                          width: '20px'\\n                        }\\\"\\n                      >\\n                      </label>\\n                      {{ option | titlecase }}</mat-option\\n                    >\\n                  </mat-select>\\n\\n                  <mat-select\\n                    *ngIf=\\\"!input.simpleOpts\\\"\\n                    [required]=\\\"input.required\\\"\\n                    formControlName=\\\"{{ input.gate }}\\\"\\n                  >\\n                    <mat-option\\n                      *ngFor=\\\"let option of input.options\\\"\\n                      [value]=\\\"option.id\\\"\\n                      >{{\\n                        option.label ||\\n                          option.name ||\\n                          option.email ||\\n                          (option.firstName + ' ' + option.lastName\\n                            | titlecase)\\n                      }}</mat-option\\n                    >\\n                  </mat-select>\\n                </div>\\n\\n                <div *ngSwitchCase=\\\"'date'\\\">\\n                  <input\\n                    matInput\\n                    (dateChange)=\\\"\\n                      handleDateChange(input.gate, $event)\\n                    \\\"\\n                    [matDatepicker]=\\\"picker\\\"\\n                    placeholder=\\\"Choose a date\\\"\\n                    formControlName=\\\"{{ input.gate }}\\\"\\n                  />\\n                  <mat-datepicker-toggle\\n                    matSuffix\\n                    [for]=\\\"picker\\\"\\n                  ></mat-datepicker-toggle>\\n                  <mat-datepicker\\n                    #picker\\n                    startView=\\\"year\\\"\\n                  ></mat-datepicker>\\n                </div>\\n\\n                <textarea\\n                  matInput\\n                  *ngSwitchCase=\\\"'textarea'\\\"\\n                  [required]=\\\"input.required\\\"\\n                  placeholder=\\\"{{ input.placeholder || input.name }}\\\"\\n                  formControlName=\\\"{{ input.gate }}\\\"\\n                ></textarea>\\n\\n                <input\\n                  matInput\\n                  *ngSwitchDefault\\n                  [required]=\\\"input.required\\\"\\n                  placeholder=\\\"{{ input.placeholder || input.name }}\\\"\\n                  [type]=\\\"input.type\\\"\\n                  [minlength]=\\\"input.minLength\\\"\\n                  formControlName=\\\"{{ input.gate }}\\\"\\n                />\\n\\n                <mat-error\\n                  *ngIf=\\\"\\n                    input.type == 'select' &&\\n                    input.options &&\\n                    input.options.length == 0 &&\\n                    input.required\\n                  \\\"\\n                >\\n                  <strong\\n                    >No options provided, please check your seeded\\n                    data.</strong\\n                  >\\n                </mat-error>\\n\\n                <mat-error\\n                  *ngIf=\\\"isControlHasError(input.gate, 'required')\\\"\\n                >\\n                  <strong\\n                    >{{ input.name | titlecase }} is required.</strong\\n                  >\\n                </mat-error>\\n\\n                <mat-error\\n                  *ngIf=\\\"isControlHasError(input.gate, 'minlength')\\\"\\n                >\\n                  <strong>\\n                    {{ input.name | titlecase }} must be 8 characters\\n                    long</strong\\n                  >\\n                </mat-error>\\n\\n                <mat-error\\n                  *ngIf=\\\"isControlHasError(input.gate, 'email')\\\"\\n                >\\n                  <strong\\n                    >{{ input.name | titlecase }} must be a valid\\n                    email.</strong\\n                  >\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <mat-checkbox\\n                formControlName=\\\"{{ input.gate }}\\\"\\n                [required]=\\\"input.required\\\"\\n                *ngIf=\\\"input.type == 'boolean'\\\"\\n              >\\n                {{ input.placeholder || input.name }}\\n              </mat-checkbox>\\n\\n              <!-- File Input -->\\n              <div class=\\\"\\\" *ngIf=\\\"input.type === 'file'\\\">\\n                <label for=\\\"\\\">\\n                  {{ input.name }}\\n                </label>\\n                <input\\n                  (change)=\\\"onFileChange($event, input.gate)\\\"\\n                  #fileBtn\\n                  type=\\\"file\\\"\\n                  accept=\\\"image/*\\\"\\n                  style=\\\"display: none;\\\"\\n                />\\n                <button\\n                  type=\\\"button\\\"\\n                  (click)=\\\"fileBtn.click()\\\"\\n                  class=\\\"btn\\\"\\n                  [disabled]=\\\"loading\\\"\\n                >\\n                  {{ input.label || 'Choose File' }}\\n                </button>\\n                <mat-spinner\\n                  style=\\\"color: black;\\\"\\n                  [hidden]=\\\"uploading == 0\\\"\\n                  [diameter]=\\\"30\\\"\\n                ></mat-spinner>\\n                <div\\n                  class=\\\"d-flex flex-column\\\"\\n                  style=\\\"padding: 5px;\\\"\\n                  *ngIf=\\\"uploading == 0 && (imgURL || instanceData)\\\"\\n                >\\n                  <img\\n                    [src]=\\\"\\n                      imgURL ||\\n                      (instanceData && instanceData[input.gate]\\n                        ? instanceData[input.gate]\\n                        : null)\\n                    \\\"\\n                    height=\\\"200\\\"\\n                    *ngIf=\\\"\\n                      imgURL ||\\n                      (instanceData && instanceData[input.gate])\\n                    \\\"\\n                  />\\n                  <span *ngIf=\\\"selectedFile\\\">\\n                    {{ selectedFile.name }}\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </kt-portlet-body>\\n  </kt-portlet>\\n</div>\\n\\n<div\\n  *ngIf=\\\"formGroup\\\"\\n  [ngClass]=\\\"{\\n    'modal-footer': modalFlag,\\n    'normal-footer': !modalFlag\\n  }\\\"\\n>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-dark\\\"\\n    (click)=\\\"cancelChanges()\\\"\\n    [hidden]=\\\"wizardFlag && activeStep != 1\\\"\\n  >\\n    {{ cancelBtnText || 'Cancel' }}\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-dark\\\"\\n    (click)=\\\"backChanges()\\\"\\n    [hidden]=\\\"(wizardFlag && activeStep == 1) || !wizardFlag\\\"\\n  >\\n    {{ 'Back' }}\\n  </button>\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"btn btn-primary\\\"\\n    (click)=\\\"next()\\\"\\n    [hidden]=\\\"(wizardFlag && activeStep == totalSteps) || !wizardFlag\\\"\\n  >\\n    {{ 'Next' }}\\n  </button>\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"btn btn-primary\\\"\\n    [disabled]=\\\"formGroup.invalid || loading > 0\\\"\\n    (click)=\\\"submit()\\\"\\n    [hidden]=\\\"wizardFlag && activeStep != totalSteps\\\"\\n  >\\n    {{ submitBtnText || 'Submit' }}\\n  </button>\\n</div>\\n\"","module.exports = \".modal-form {\\n  max-height: calc(100vh - 210px);\\n  overflow-y: scroll; }\\n\\n.kt-wizard-v1 {\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav {\\n    border-bottom: 1px solid #eeeef4; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items {\\n      display: -webkit-box;\\n      display: flex;\\n      -webkit-box-align: center;\\n              align-items: center;\\n      -webkit-box-pack: center;\\n              justify-content: center; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item {\\n        display: -webkit-box;\\n        display: flex;\\n        -webkit-box-align: center;\\n                align-items: center;\\n        -webkit-box-pack: center;\\n                justify-content: center;\\n        flex-wrap: wrap;\\n        -webkit-box-flex: 1;\\n                flex: 1; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item a {\\n          color: kt-base-color(label, 1); }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item:after {\\n          font-size: 1.25rem;\\n          color: kt-base-color(label, 1);\\n          margin-left: 0.5rem;\\n          margin-right: 0.5rem; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item:last-child:after {\\n          content: none; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item .kt-wizard-v1__nav-body {\\n          -webkit-box-flex: 1;\\n                  flex: 1;\\n          display: -webkit-box;\\n          display: flex;\\n          -webkit-box-orient: vertical;\\n          -webkit-box-direction: normal;\\n                  flex-direction: column;\\n          -webkit-box-align: center;\\n                  align-items: center;\\n          -webkit-box-pack: center;\\n                  justify-content: center;\\n          padding: 2rem 1rem;\\n          text-align: center; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item .kt-wizard-v1__nav-body .kt-wizard-v1__nav-icon {\\n            font-size: 2rem;\\n            color: kt-base-color(label, 1);\\n            margin-bottom: 0.5rem; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item .kt-wizard-v1__nav-body .kt-wizard-v1__nav-label {\\n            font-size: 1.1rem;\\n            font-weight: 500;\\n            color: kt-base-color(label, 1); }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item[data-ktwizard-state='done']:after, .kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item[data-ktwizard-state='current']:after, .kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item.completed:after {\\n          color: #5867dd; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item[data-ktwizard-state='done'] .kt-wizard-v1__nav-body .kt-wizard-v1__nav-icon, .kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item[data-ktwizard-state='current'] .kt-wizard-v1__nav-body .kt-wizard-v1__nav-icon, .kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item.completed .kt-wizard-v1__nav-body .kt-wizard-v1__nav-icon {\\n          color: #5867dd; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item[data-ktwizard-state='done'] .kt-wizard-v1__nav-body .kt-wizard-v1__nav-label, .kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item[data-ktwizard-state='current'] .kt-wizard-v1__nav-body .kt-wizard-v1__nav-label, .kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items .kt-wizard-v1__nav-item.completed .kt-wizard-v1__nav-body .kt-wizard-v1__nav-label {\\n          color: #5867dd; }\\n\\n.kt-wizard-v1 .kt-wizard-v1__nav .kt-wizard-v1__nav-items.kt-wizard-v1__nav-items--clickable .kt-wizard-v1__nav-item {\\n        cursor: pointer; }\\n\\n.normal-footer {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: end;\\n          justify-content: flex-end;\\n  -webkit-box-align: center;\\n          align-items: center; }\\n\\n.normal-footer button {\\n    margin-left: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9haG1lZGhpc2hhbS9EZXNrdG9wL1dvcmsvZXRvb2xzX2FkbWluL3NyYy9hcHAvc2hhcmVkL2dlbmVyaWMtZm9ybS9nZW5lcmljLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0E7RUFDRSwrQkFBK0I7RUFDL0Isa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsNEJBQXNCO0VBQXRCLDZCQUFzQjtVQUF0QixzQkFBc0IsRUFBQTs7QUFEeEI7SUFJSSxnQ0FiOEIsRUFBQTs7QUFTbEM7TUFPTSxvQkFBYTtNQUFiLGFBQWE7TUFDYix5QkFBbUI7Y0FBbkIsbUJBQW1CO01BQ25CLHdCQUF1QjtjQUF2Qix1QkFBdUIsRUFBQTs7QUFUN0I7UUFZUSxvQkFBYTtRQUFiLGFBQWE7UUFDYix5QkFBbUI7Z0JBQW5CLG1CQUFtQjtRQUNuQix3QkFBdUI7Z0JBQXZCLHVCQUF1QjtRQUN2QixlQUFlO1FBQ2YsbUJBQU87Z0JBQVAsT0FBTyxFQUFBOztBQWhCZjtVQW1CVSw4QkE5QnNDLEVBQUE7O0FBV2hEO1VBdUJVLGtCQUFrQjtVQUNsQiw4QkFuQ3NDO1VBb0N0QyxtQkFBbUI7VUFDbkIsb0JBQW9CLEVBQUE7O0FBMUI5QjtVQStCWSxhQUFhLEVBQUE7O0FBL0J6QjtVQW9DVSxtQkFBTztrQkFBUCxPQUFPO1VBQ1Asb0JBQWE7VUFBYixhQUFhO1VBQ2IsNEJBQXNCO1VBQXRCLDZCQUFzQjtrQkFBdEIsc0JBQXNCO1VBQ3RCLHlCQUFtQjtrQkFBbkIsbUJBQW1CO1VBQ25CLHdCQUF1QjtrQkFBdkIsdUJBQXVCO1VBQ3ZCLGtCQUFrQjtVQUNsQixrQkFBa0IsRUFBQTs7QUExQzVCO1lBNkNZLGVBQWU7WUFDZiw4QkF6RG9DO1lBMERwQyxxQkFBcUIsRUFBQTs7QUEvQ2pDO1lBbURZLGlCQUFpQjtZQUNqQixnQkFBZ0I7WUFDaEIsOEJBakVxQyxFQUFBOztBQVlqRDtVQTZEWSxjQXZFeUIsRUFBQTs7QUFVckM7VUFrRWMsY0E1RXVCLEVBQUE7O0FBVXJDO1VBc0VjLGNBaEZ1QixFQUFBOztBQVVyQztRQThFVSxlQUFlLEVBQUE7O0FBNkJ6QjtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLHFCQUF5QjtVQUF6Qix5QkFBeUI7RUFDekIseUJBQW1CO1VBQW5CLG1CQUFtQixFQUFBOztBQUhyQjtJQUtJLGlCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2dlbmVyaWMtZm9ybS9nZW5lcmljLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIka3Qtd2l6YXJkLXYxLXN0ZXAtbGFiZWw6IGt0LWJhc2UtY29sb3IobGFiZWwsIDEpO1xuJGt0LXdpemFyZC12MS1zdGVwLWljb246IGt0LWJhc2UtY29sb3IobGFiZWwsIDEpO1xuJGt0LXdpemFyZC12MS1zdGVwLWhpZ2hsaWdodDogIzU4NjdkZDtcbiRrdC13aXphcmQtdjEtc3RlcC1ib3JkZXI6ICNlZWVlZjQ7XG4ka3Qtd2l6YXJkLXYxLWZvcm0tYmc6ICNmOWZhZmM7XG4ka3Qtd2l6YXJkLXYxLWZvcm0taW5uZXItYmc6ICNmZmZmZmY7XG5cbi5tb2RhbC1mb3JtIHtcbiAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDIxMHB4KTtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4ua3Qtd2l6YXJkLXYxIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLy8gTmF2XG4gIC5rdC13aXphcmQtdjFfX25hdiB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRrdC13aXphcmQtdjEtc3RlcC1ib3JkZXI7XG5cbiAgICAua3Qtd2l6YXJkLXYxX19uYXYtaXRlbXMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgICAgLmt0LXdpemFyZC12MV9fbmF2LWl0ZW0ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4OiAxO1xuXG4gICAgICAgIGEge1xuICAgICAgICAgIGNvbG9yOiAka3Qtd2l6YXJkLXYxLXN0ZXAtaWNvbjtcbiAgICAgICAgfVxuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgICAgICBjb2xvcjogJGt0LXdpemFyZC12MS1zdGVwLWljb247XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiBub25lO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5rdC13aXphcmQtdjFfX25hdi1ib2R5IHtcbiAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbTtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgICAua3Qtd2l6YXJkLXYxX19uYXYtaWNvbiB7XG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgICAgICBjb2xvcjogJGt0LXdpemFyZC12MS1zdGVwLWljb247XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmt0LXdpemFyZC12MV9fbmF2LWxhYmVsIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgIGNvbG9yOiAka3Qtd2l6YXJkLXYxLXN0ZXAtbGFiZWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJltkYXRhLWt0d2l6YXJkLXN0YXRlPSdkb25lJ10sXG4gICAgICAgICZbZGF0YS1rdHdpemFyZC1zdGF0ZT0nY3VycmVudCddLFxuICAgICAgICAmLmNvbXBsZXRlZCB7XG4gICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBjb2xvcjogJGt0LXdpemFyZC12MS1zdGVwLWhpZ2hsaWdodDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAua3Qtd2l6YXJkLXYxX19uYXYtYm9keSB7XG4gICAgICAgICAgICAua3Qtd2l6YXJkLXYxX19uYXYtaWNvbiB7XG4gICAgICAgICAgICAgIGNvbG9yOiAka3Qtd2l6YXJkLXYxLXN0ZXAtaGlnaGxpZ2h0O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAua3Qtd2l6YXJkLXYxX19uYXYtbGFiZWwge1xuICAgICAgICAgICAgICBjb2xvcjogJGt0LXdpemFyZC12MS1zdGVwLWhpZ2hsaWdodDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJi5rdC13aXphcmQtdjFfX25hdi1pdGVtcy0tY2xpY2thYmxlIHtcbiAgICAgICAgLmt0LXdpemFyZC12MV9fbmF2LWl0ZW0ge1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4ka3QtYmFzZS1jb2xvcnM6IChcbiAgbGFiZWw6IChcbiAgICAxOiAjYTJhNWI5LFxuICAgIDI6ICM3NDc4OGQsXG4gICAgMzogIzU5NWQ2ZSxcbiAgICA0OiAjNDg0NjViXG4gICksXG4gIHNoYXBlOiAoXG4gICAgMTogI2YwZjNmZixcbiAgICAyOiAjZThlY2ZhLFxuICAgIDM6ICM5M2EyZGQsXG4gICAgNDogIzY0NmM5YVxuICApLFxuICBncmV5OiAoXG4gICAgMTogI2Y3ZjhmYSxcbiAgICAvLyNmNGY1ZjhcbiAgICAgIDI6ICNlYmVkZjIsXG4gICAgMzogZGFya2VuKCNlYmVkZjIsIDMlKSxcbiAgICA0OiBkYXJrZW4oI2ViZWRmMiwgNiUpXG4gIClcbikgIWRlZmF1bHQ7XG5cbi5ub3JtYWwtZm9vdGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweFx0O1xuICB9XG59XG4iXX0= */\"","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { CRUDService } from '../_services/crud.service';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  LayoutUtilsService,\n  MessageType\n} from '../../core/_base/crud';\n\n@Component({\n  selector: 'kt-generic-form',\n  templateUrl: './generic-form.component.html',\n  styleUrls: ['./generic-form.component.scss']\n})\nexport class GenericFormComponent implements OnInit {\n  @Input() title: string;\n  @Input() modelData: any;\n  @Input() instanceData: any;\n  @Input() gate: string;\n  @Input() query: any;\n  @Input() cancelBtnText: string;\n  @Input() submitBtnText: string;\n  @Input() modalFlag = false;\n\n  @Output()\n  notifyParentCancel: EventEmitter<any> = new EventEmitter();\n  @Output()\n  notifyParentSuccess: EventEmitter<any> = new EventEmitter();\n  @Output()\n  notifyParentFailure: EventEmitter<any> = new EventEmitter();\n  @Output()\n  emitFormValue: EventEmitter<any> = new EventEmitter();\n  public formData;\n  public formGroups: any[];\n  public formGroup: FormGroup;\n  public wizardFlag: boolean;\n  public activeStep: number;\n  public totalSteps: number;\n  public loading = 0;\n  public uploading = 0;\n  public selectedFile;\n  // for image upload, if exists\n  public imgURL;\n  constructor(\n    private _crudService: CRUDService,\n    private changeDetectorRefs: ChangeDetectorRef,\n    private layoutUtilsService: LayoutUtilsService\n  ) {\n    this.formGroup = new FormGroup({});\n  }\n\n  ngOnInit() {\n    this.formData = this.modelData.form;\n    this.formGroups = this.modelData.form['groups'];\n    this.wizardFlag = this.formData.wizardFlag;\n\n    this.activeStep = 1;\n    this.totalSteps = this.formGroups.length;\n    // making sure form data is an array for consistency\n    if (!Array.isArray(this.formGroups)) {\n      this.formGroups = [this.formGroups];\n    }\n\n    let group: any = {};\n    const formInputs = this.formGroups.reduce((acc, singleForm) => {\n      return acc.concat(singleForm['inputs']);\n    }, []);\n\n    formInputs.forEach((element, j) => {\n      if (!element.gate) {\n        element.gate = element.name;\n      }\n      let inputValidators = [];\n      if (element.email) {\n        inputValidators.push(Validators.email);\n      }\n      if (element.required) {\n        inputValidators.push(Validators.required);\n      }\n      group[element.gate] = new FormControl(\n        element.value || element.defaultValue || null,\n        inputValidators\n      );\n\n      if (element.type === 'select' && !element.simpleOpts) {\n        this._crudService\n          .getData(element.apiend, { limit: 70 })\n          .then((res) => {\n            element.options = (res.data ? res.data : res) || [];\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    });\n\n    this.formGroup = new FormGroup(group);\n\n    const editData = { ...this.instanceData };\n    for (const key in editData) {\n      if (\n        editData[key] != null &&\n        typeof editData[key] === 'object'\n      ) {\n        editData[key] = editData[key].id;\n      }\n    }\n    this.formGroup.patchValue(editData);\n  }\n\n  handleDateChange(formControlName, event) {\n    // formatting date\n    const d = new Date(event.target.value);\n    const ye = new Intl.DateTimeFormat('en', {\n      year: 'numeric'\n    }).format(d);\n    const mo = new Intl.DateTimeFormat('en', {\n      month: '2-digit'\n    }).format(d);\n    const da = new Intl.DateTimeFormat('en', {\n      day: '2-digit'\n    }).format(d);\n    this.formGroup.patchValue({\n      [formControlName]: `${ye}-${mo}-${da}`\n    });\n  }\n\n  submit() {\n    let sentData = {};\n    const formValue = this.formGroup.value;\n    for (let index in formValue) {\n      if (formValue[index]) {\n        sentData[index] = formValue[index];\n      }\n    }\n    if (this.formData['type'] === 'notifyParent') {\n      return this.emitFormValue.emit(formValue);\n    }\n\n    let modifyPromise;\n\n    if (this.formData['type'] === 'special') {\n      console.log('Sepcial form');\n      let formBody = { ...sentData };\n      if (this.formData['wrapperKey']) {\n        formBody = {\n          [this.formData['wrapperKey']]: { ...sentData }\n        };\n      }\n      modifyPromise = this._crudService.api(\n        this.formData['endPoint'],\n        formBody,\n        this.formData['httpMethod']\n      );\n    } else {\n      if (this.query.id) {\n        console.log('Edit mode');\n        modifyPromise = this._crudService.editData(\n          this.gate,\n          sentData,\n          this.query.id\n        );\n      } else {\n        console.log('Create mode');\n        modifyPromise = this._crudService.addData(\n          this.gate,\n          sentData,\n          this.query\n        );\n      }\n    }\n\n    this.loading++;\n    return modifyPromise\n      .then((res) => {\n        this.loading--;\n\n        this._crudService.forwardForceRefresh(true);\n        this.layoutUtilsService.showActionNotification(\n          res.message || 'Successfully sent',\n          MessageType.Create\n        );\n        if (this.notifyParentSuccess) {\n          this.notifyParentSuccess.emit({\n            id: this.query.id,\n            ...sentData\n          });\n        }\n      })\n      .catch((err) => {\n        this.loading--;\n\n        this.layoutUtilsService.showActionNotification(\n          'Failed: ' + err.error.message ||\n            'Sorry, something went worng.',\n          MessageType.Delete\n        );\n        if (this.notifyParentFailure) {\n          this.notifyParentFailure.emit(err);\n        }\n      });\n  }\n\n  cancelChanges() {\n    // FIXME: edit case\n    this.formGroup.reset();\n    if (this.notifyParentCancel) {\n      this.notifyParentCancel.emit(true);\n    }\n  }\n\n  backChanges() {\n    this.activeStep -= 1;\n  }\n\n  next() {\n    this.activeStep += 1;\n  }\n\n  isControlHasError(\n    controlName: string,\n    validationType: string\n  ): boolean {\n    const control = this.formGroup.controls[controlName];\n    if (!control) {\n      return false;\n    }\n\n    const result =\n      control.hasError(validationType) &&\n      (control.dirty || control.touched);\n    return result;\n  }\n\n  onFileChange(event, controlName) {\n    console.log(\n      'GenericFormComponent -> onFileChange -> controlName',\n      controlName\n    );\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      this.selectedFile = file;\n      event.target.value = '';\n\n      const mimeType = file.type;\n      if (mimeType.match(/image\\/*/) == null) {\n        this.layoutUtilsService.showActionNotification(\n          'Not Allowed\\n' + 'Only image files are allowed.',\n          MessageType.Delete\n        );\n        return;\n      }\n\n      this.imgURL = null;\n      if (this.instanceData) {\n        this.instanceData[controlName] = null;\n      }\n\n      this.uploadFile()\n        .then((fileUri) => {\n          console.log(\n            'GenericFormComponent -> onFileChange -> fileUri',\n            fileUri\n          );\n          this.uploading--;\n\n          this.formGroup.patchValue({\n            [controlName]: fileUri\n          });\n          if (this.instanceData) {\n            this.instanceData[controlName] = fileUri;\n          }\n          this.imgURL = fileUri;\n          console.log('Detetcing changesf');\n          // this.changeDetectorRefs.detectChanges();\n        })\n\n        .catch((err) => {\n          console.log(\n            'GenericFormComponent -> onFileChange -> err',\n            err\n          );\n          this.uploading--;\n          this.layoutUtilsService.showActionNotification(\n            'Sorry, failed to upload image',\n            MessageType.Delete\n          );\n        });\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = (_event) => {\n        this.imgURL = reader.result;\n      };\n    }\n  }\n\n  uploadFile() {\n    this.uploading++;\n    return this._crudService\n      .uploadAttachment(this.selectedFile)\n      .then((response) => {\n        return response['uploadedFile'].link;\n      });\n  }\n}\n","module.exports = \"<kt-portlet>\\n  <kt-portlet-header\\n    [title]=\\\"title + ' List'\\\"\\n    [class]=\\\"'kt-portlet__head--lg'\\\"\\n  >\\n    <ng-container ktPortletTools>\\n      <button\\n        mat-raised-button\\n        color=\\\"primary\\\"\\n        matTooltip=\\\"Create new {{ title }}\\\"\\n        (click)=\\\"open({}, 'add')\\\"\\n      >\\n        Add {{ title }}\\n      </button>\\n    </ng-container>\\n  </kt-portlet-header>\\n  <div *ngIf=\\\"alert\\\" class=\\\"row alert alert-info\\\">\\n    {{ alert }}\\n  </div>\\n  <kt-portlet-body>\\n    <div class=\\\"kt-form kt-margin-b-5\\\">\\n      <div *ngIf=\\\"search\\\" class=\\\"kt-form__filtration\\\">\\n        <div class=\\\"row align-items-center\\\">\\n          <div class=\\\"col-md-12 kt-margin-bottom-5-mobile\\\">\\n            <mat-form-field class=\\\"mat-form-field-fluid\\\">\\n              <input\\n                matInput\\n                #searchInput\\n                placeholder=\\\"Search\\\"\\n                (keyup.enter)=\\\"sendSearch(searchInput.value)\\\"\\n              />\\n              <mat-hint>\\n                <strong>Search</strong> by Name or ID\\n              </mat-hint>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <br />\\n      </div>\\n    </div>\\n\\n    <table\\n      mat-table\\n      *ngIf=\\\"listData\\\"\\n      [dataSource]=\\\"listData\\\"\\n      class=\\\"full-width\\\"\\n      style=\\\"text-align: left\\\"\\n    >\\n      <div *ngFor=\\\"let item of Columns\\\">\\n        <ng-container matColumnDef=\\\"{{ item.display }}\\\">\\n          <th\\n            mat-header-cell\\n            *matHeaderCellDef\\n            style=\\\"text-align: left\\\"\\n          >\\n            {{ item.display | titlecase }}\\n          </th>\\n          <div *ngIf=\\\"item.actions; else ntActions\\\">\\n            <td\\n              mat-cell\\n              *matCellDef=\\\"let element; let eleIdx = index\\\"\\n            >\\n              <button\\n                *ngIf=\\\"item.actions.custom\\\"\\n                mat-icon-button\\n                matTooltip=\\\"{{ item.actions.custom.label }}\\\"\\n                type=\\\"button\\\"\\n                [disabled]=\\\"\\n                  item.actions.custom.disableKey &&\\n                  element[item.actions.custom.disableKey]\\n                \\\"\\n                [ngClass]=\\\"\\n                  item.actions.custom.class\\n                    ? item.actions.custom.class\\n                    : {}\\n                \\\"\\n                (click)=\\\"customActionClickEvent.emit(element)\\\"\\n              >\\n                <mat-icon>{{ item.actions.custom.icon }}</mat-icon>\\n              </button>\\n\\n              <button\\n                *ngIf=\\\"item.actions.edit\\\"\\n                mat-icon-button\\n                color=\\\"primary\\\"\\n                matTooltip=\\\"Edit Record\\\"\\n                (click)=\\\"edit(element)\\\"\\n              >\\n                <mat-icon>create</mat-icon>\\n              </button>\\n\\n              <button\\n                *ngIf=\\\"item.actions.view\\\"\\n                mat-icon-button\\n                color=\\\"accent\\\"\\n                matTooltip=\\\"View\\\"\\n                (click)=\\\"handleViewClick(item.actions.view, element)\\\"\\n              >\\n                <mat-icon>remove_red_eye</mat-icon>\\n              </button>\\n\\n              <button\\n                *ngIf=\\\"item.actions.delete\\\"\\n                mat-icon-button\\n                color=\\\"warn\\\"\\n                matTooltip=\\\"Delete Record\\\"\\n                type=\\\"button\\\"\\n                (click)=\\\"delete(element)\\\"\\n              >\\n                <mat-icon>delete</mat-icon>\\n              </button>\\n            </td>\\n          </div>\\n          <ng-template #ntActions>\\n            <td\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n              [ngSwitch]=\\\"item.type\\\"\\n            >\\n              <div *ngSwitchCase=\\\"'obj'\\\">\\n                <span\\n                  [ngStyle]=\\\"item.nativeStyle ? item.nativeStyle : {}\\\"\\n                  [className]=\\\"item.styleClass\\\"\\n                  style=\\\"text-transform: capitalize\\\"\\n                >\\n                  <div *ngIf=\\\"element[item.objKey]; else isNull\\\">\\n                    {{ element[item.objKey][item.key] }}\\n                  </div>\\n                  <ng-template #isNull>\\n                    <span class=\\\"kt-font-danger\\\">\\n                      {{ item.nullValue || '__' }}\\n                    </span></ng-template\\n                  >\\n                </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'date'\\\">\\n                <span>\\n                  <div>\\n                    {{\\n                      element[item.key] | date: 'dd/MM/yyyy hh:mm:ss'\\n                    }}\\n                  </div>\\n                  <ng-template #isNull>\\n                    <span class=\\\"kt-font-danger\\\">\\n                      {{ item.nullValue || '__' }}\\n                    </span></ng-template\\n                  >\\n                </span>\\n              </div>\\n              <div\\n                *ngSwitchCase=\\\"'boolean'\\\"\\n                [className]=\\\"item.className + ' '\\\"\\n              >\\n                <ng-container *ngIf=\\\"item.renderHTML\\\">\\n                  <div\\n                    *ngIf=\\\"\\n                      item.trueHTML && item.key && element[item.key]\\n                    \\\"\\n                    [innerHTML]=\\\"item.trueHTML\\\"\\n                  ></div>\\n                </ng-container>\\n                <div\\n                  *ngIf=\\\"\\n                    item.falseHTML && item.key && !element[item.key]\\n                  \\\"\\n                  [innerHTML]=\\\"item.falseHTML\\\"\\n                ></div>\\n                <ng-container *ngIf=\\\"!item.renderHTML\\\">\\n                  <i\\n                    *ngIf=\\\"\\n                      item.objKey && !element[item.objKey][item.key]\\n                    \\\"\\n                    class=\\\"fas fa-times\\\"\\n                  ></i>\\n                  <i\\n                    *ngIf=\\\"\\n                      item.objKey && element[item.objKey][item.key]\\n                    \\\"\\n                    class=\\\"fas fa-check\\\"\\n                  ></i>\\n                  <i\\n                    *ngIf=\\\"!item.objKey && !element[item.key]\\\"\\n                    class=\\\"fas fa-times\\\"\\n                  ></i>\\n                  <i\\n                    *ngIf=\\\"!item.objKey && element[item.key]\\\"\\n                    class=\\\"fas fa-check\\\"\\n                  ></i>\\n                </ng-container>\\n              </div>\\n\\n              <div *ngSwitchCase=\\\"'combination'\\\">\\n                <span\\n                  *ngFor=\\\"\\n                    let itemKey of item.keys;\\n                    let keyIdx = index\\n                  \\\"\\n                  style=\\\"margin-right: 2px\\\"\\n                >\\n                  {{ element[itemKey] || '__' }}\\n                  <span *ngIf=\\\"keyIdx < item.keys.length - 1\\\">\\n                    {{ item.separator || ' ' }}\\n                  </span>\\n                </span>\\n                <span *ngIf=\\\"item.postFix\\\">\\n                  {{ item.postFix }}\\n                </span>\\n              </div>\\n              <div *ngSwitchDefault>\\n                <span\\n                  *ngIf=\\\"item.parentStyle\\\"\\n                  [className]=\\\"\\n                    item.parentStyle\\n                      ? item.parentStyle[element[item.key]]\\n                      : null\\n                  \\\"\\n                >\\n                  &nbsp;\\n                </span>\\n                <div\\n                  [className]=\\\"\\n                    item.className +\\n                    ' ' +\\n                    (item.styles\\n                      ? item.styles[element[item.key]]\\n                      : null)\\n                  \\\"\\n                  style=\\\"text-transform: capitalize\\\"\\n                  [ngStyle]=\\\"item.nativeStyle ? item.nativeStyle : {}\\\"\\n                >\\n                  {{ element[item.key] || item.nullValue }}\\n                  <span *ngIf=\\\"item.postFix\\\">\\n                    {{ item.postFix }}\\n                  </span>\\n                </div>\\n              </div>\\n            </td>\\n          </ng-template>\\n        </ng-container>\\n      </div>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"Column\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: Column\\\"></tr>\\n    </table>\\n\\n    <tr\\n      [hidden]=\\\"!(loader && listData && listData.length == 0)\\\"\\n      style=\\\"text-align: center; padding-top: 1rem\\\"\\n    >\\n      <td colspan=\\\"10\\\">No {{ title }} Found</td>\\n    </tr>\\n  </kt-portlet-body>\\n\\n  <div class=\\\"mat-table__bottom\\\">\\n    <mat-spinner [hidden]=\\\"loader\\\" [diameter]=\\\"20\\\"></mat-spinner>\\n    <mat-paginator\\n      [pageSize]=\\\"pageSize\\\"\\n      [length]=\\\"totalLength\\\"\\n      [showFirstLastButtons]=\\\"false\\\"\\n      (page)=\\\"loadList()\\\"\\n    >\\n    </mat-paginator>\\n  </div>\\n</kt-portlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9nZW5lcmljLWxpc3QvZ2VuZXJpYy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  ViewChild,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnDestroy\n} from '@angular/core';\nimport { CRUDService } from '../_services/crud.service';\nimport {\n  LayoutUtilsService,\n  MessageType\n} from '../../core/_base/crud';\nimport { MatPaginator } from '@angular/material';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { GenericFormModalComponent } from '../generic-form-modal/generic-form-modal.component';\nimport { interval } from 'rxjs/internal/observable/interval';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'kt-generic-list',\n  templateUrl: './generic-list.component.html',\n  styleUrls: ['./generic-list.component.scss']\n})\nexport class GenericListComponent implements OnInit, OnDestroy {\n  @Input() title: string;\n  @Input() modelData: any;\n  @Input() alert: any;\n  @Input() gate: string;\n  @Input() query: any;\n  @Input() wizard = false;\n  @Input() search = true;\n  @Input() paginate = true;\n  @Input() enabledTestsFlag = false;\n  @Input() refreshInterval: number;\n  @Output() addClickEvent = new EventEmitter<any>();\n  @Output() listChanged = new EventEmitter<any>();\n  @Output() customActionClickEvent = new EventEmitter<any>();\n  @Output() customViewEvent = new EventEmitter<any>();\n\n  public pageSize = 10;\n  public displayedColumns: string[];\n  public totalLength: number;\n  public listData: object[];\n  public loader: boolean;\n  public Columns: any[] = [];\n  public Column: string[] = [];\n  public selectedItem: any;\n  public refreshListner: any;\n  public intervalListener: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private _crudService: CRUDService,\n    private layoutUtilsService: LayoutUtilsService,\n    private modalService: NgbModal,\n    private router: Router,\n    private changeDetectorRefs: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.loader = false;\n    this.Columns = this.modelData.list;\n    this.Columns.forEach((element) => {\n      this.Column.push(element.display);\n    });\n    if (this.enabledTestsFlag) {\n      this.getLabsFilters();\n    }\n    // if (this.refreshInterval > 0) {\n    //   // auto refresh mode\n    //   this.intervalListener = interval(this.refreshInterval * 1000)\n    //     .pipe(\n    //       startWith(0),\n    //       switchMap(() => this.loadList())\n    //     )\n    //     .subscribe((res) => console.log(res));\n    // } else {\n    // single fetch mode\n    this.loadList();\n    // }\n    // force refresh triggered from other components\n    // this.refreshListner = this._crudService.forceRefreshValue.subscribe(\n    //   (res) => {\n    //     if (res) {\n    //       this.loadList();\n    //     }\n    //   }\n    // );\n  }\n\n  async getLabsFilters() {\n    try {\n      const labs = await this._crudService.api('/api/labs');\n      const filters = labs.data.map((lab) => {\n        return { label: lab.name, value: lab.id };\n      });\n      this.modelData.filters = [\n        { label: 'Lab', options: filters, queryParam: 'lab' }\n      ];\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  sendSearch(value) {\n    this.loader = false;\n    let query: any = {};\n    // query['searchFields'] = [];\n    // query['searchTerm'] = value;\n    this.modelData.list.forEach((listItem) => {\n      if (listItem.search) {\n        if (isNaN(value) && listItem.type === 'string') {\n          query[listItem.searchKey] = {\n            like: value + '%'\n          };\n        } else if (!isNaN(value) && listItem.key === 'id') {\n          query[listItem.searchKey] = +value;\n        }\n      }\n    });\n    // query['searchFields'] = query['searchFields'].join(',');\n    if (+value === 0) {\n      return this.loadList();\n    }\n    this.loadList({ where: query });\n  }\n\n  delete(data: any) {\n    const _title: string = `${this.title} Delete`;\n    const _description: string = `Are you sure to permanently delete this ${this.title}?`;\n    const _waitDesciption: string = `${this.title} is  being deleted...`;\n    const _deleteMessage = `${this.title} has been deleted`;\n    const q = { ...{ id: data.id } };\n\n    const dialogRef = this.layoutUtilsService.deleteElement(\n      _title,\n      _description,\n      _waitDesciption\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      // console.log('TCL: GenericListComponent -> delete -> res', res);\n      // if (!res) {\n      //   return;\n      // }\n      // this.listChanged.emit(true);\n      // this.listData = this.listData.filter(\n      //   (item) => item['id'] !== data.id\n      // );\n      // this.changeDetectorRefs.detectChanges();\n      // this.layoutUtilsService.showActionNotification(_deleteMessage);\n\n      this._crudService\n        .deleteData(this.gate, q)\n        .then((deleteRes) => {\n          this.listChanged.emit(true);\n          this.layoutUtilsService.showActionNotification(\n            _deleteMessage\n          );\n          this.loadList().then(() => {\n            this.changeDetectorRefs.detectChanges();\n          });\n        })\n        .catch((err) => {\n          this.layoutUtilsService.showActionNotification(\n            `Failed to delete ${this.title}`,\n            MessageType.Delete\n          );\n          console.error(err);\n        });\n    });\n  }\n\n  handleFilterChange($event, filterObj) {\n    // const eventValue = $event.target.value;\n    // console.log(\n    //   'GenericListComponent -> handleFilterChange -> $event.target.value',\n    //   eventValue\n    // );\n    // if (eventValue && eventValue != 'null') {\n    //   this.query[filterObj.queryParam] = eventValue;\n    // } else {\n    //   delete this.query[filterObj.queryParam];\n    // }\n    // this.loadList();\n  }\n\n  loadList(search = null) {\n    this.query.skip = this.paginator.pageIndex * this.pageSize;\n    this.query.limit = this.pageSize;\n    let query = { ...this.query };\n    if (search) {\n      query = { ...search, ...this.query };\n    }\n\n    return this._crudService\n      .getData(this.gate, query)\n      .then(async (res) => {\n        this.totalLength = (\n          await this._crudService.getCount(this.gate, query)\n        ).count;\n        console.log({ gate: this.gate, length: this.totalLength });\n        this.listData = res.data || res.results || res;\n        console.log(this.listData);\n\n        this.changeDetectorRefs.detectChanges();\n        this.loader = true;\n      })\n      .catch((err) => {\n        this.layoutUtilsService.showActionNotification(\n          'Could not fetch list'\n        );\n        console.error('Failed to load list', err);\n      });\n  }\n\n  edit(item) {\n    let q = {\n      id: item.id\n    };\n    this.selectedItem = item;\n    this.open(q, 'edit');\n  }\n\n  // opens edit/add modal\n  open(query = {}, mode = 'add') {\n    let addModeFlag = mode === 'add';\n    let info = {\n      title: addModeFlag ? 'Add new' : 'Edit',\n      gate: this.gate,\n      mode: addModeFlag ? 'add' : 'edit',\n      instance: this.selectedItem\n    };\n\n    this.addClickEvent.emit(info);\n    if (\n      !this.modelData.externalForm ||\n      (this.modelData.inlineEdit && mode === 'edit')\n    ) {\n      let q = { ...this.query, ...query };\n      const self = this;\n      const modalRef = this.modalService.open(\n        this.modelData.customEditModal\n          ? this.modelData.customEditModal\n          : GenericFormModalComponent,\n        {\n          size: 'lg'\n        }\n      );\n\n      modalRef.componentInstance.title = info.title;\n      modalRef.componentInstance.modelData = this.modelData;\n      modalRef.componentInstance.gate = this.gate;\n      modalRef.componentInstance.query = q;\n      modalRef.componentInstance.instanceData = addModeFlag\n        ? {}\n        : this.selectedItem;\n      modalRef.componentInstance.wizard = this.wizard;\n\n      // if (!this.modelData.customEditModal) {\n      //   modalRef.componentInstance.notifyParentSuccess.subscribe(\n      //     (res) => {\n\n      //       // this.loadList();\n      //     }\n      //   );\n      // }\n      modalRef.result\n        .then((res) => {\n          if (res.id) {\n            this.listData = this.listData.map((elem) => {\n              return elem['id'] === res.id ? res : elem;\n            });\n          } else {\n            res.id = this.listData.length + 1;\n            console.log(res);\n            this.listData = [\n              ...this.listData,\n              {\n                ...res\n              }\n            ];\n          }\n          this.changeDetectorRefs.detectChanges();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }\n\n  handleViewClick(mode, element) {\n    if (mode === 'custom') {\n      this.customViewEvent.emit(element);\n    } else {\n      if (element.order_type === 'Test')\n        this.router.navigate([\n          '/requests/orders/details',\n          element.id\n        ]);\n      else if (element.order_type === 'Prescription')\n        this.router.navigate([\n          '/requests/prescription/details',\n          element.id\n        ]);\n      else this.router.navigate([mode, element.id]);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.refreshListner) {\n      this.refreshListner.unsubscribe();\n    }\n    if (this.intervalListener) {\n      this.intervalListener.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { GenericFormComponent } from './generic-form/generic-form.component';\nimport { GenericFormModalComponent } from './generic-form-modal/generic-form-modal.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRippleModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatTabsModule,\n  MatSortModule,\n  MatTooltipModule,\n  MatDialogModule,\n  MatSelectModule,\n  MatDividerModule,\n  MatIconModule,\n  MatAutocompleteModule,\n  MatProgressSpinnerModule,\n  MatNativeDateModule,\n  MatRadioModule,\n  MatCardModule,\n  MatChipsModule,\n  MatProgressBarModule,\n  MatSliderModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatButtonToggleModule,\n  MatBottomSheetModule,\n  MatExpansionModule,\n  _MatChipListMixinBase,\n  MatMenuModule,\n  MatTreeModule,\n  MatDatepickerModule\n} from '@angular/material';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { PartialsModule } from '../partials/partials.module';\nimport { GenericListComponent } from './generic-list/generic-list.component';\nimport { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n@NgModule({\n  declarations: [\n    GenericListComponent,\n    GenericFormComponent,\n    GenericFormModalComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    NgbModule,\n    PartialsModule,\n    // Angular Material Module\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRippleModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatIconModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatTreeModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatCardModule,\n    MatChipsModule,\n    MatProgressBarModule,\n    MatSliderModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatExpansionModule\n  ],\n  entryComponents: [\n    GenericFormModalComponent,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRippleModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatIconModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatTreeModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatCardModule,\n    MatChipsModule,\n    MatProgressBarModule,\n    MatSliderModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatExpansionModule,\n    MatCheckboxModule,\n    // Exported components\n    GenericListComponent,\n    GenericFormComponent,\n    GenericFormModalComponent\n  ]\n})\nexport class SharedModule {}\n"],"sourceRoot":""}